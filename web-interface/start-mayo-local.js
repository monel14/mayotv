#!/usr/bin/env node

/**
 * Script de d√©marrage pour MAYO TV avec serveur local de donn√©es
 * D√©marre simultan√©ment le serveur de donn√©es et l'interface web
 */

const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ D√©marrage de MAYO TV avec serveur local optimis√©...\n');

// D√©marrer le serveur de donn√©es local
console.log('üìä D√©marrage du serveur de donn√©es local...');
const dataServer = spawn('node', ['local-data-server.js'], {
  cwd: path.join(__dirname),
  stdio: 'inherit',
  env: { ...process.env, PORT: '3004' }
});

// Attendre un peu que le serveur de donn√©es d√©marre
setTimeout(() => {
  console.log('\nüåê D√©marrage du serveur web...');
  
  // D√©marrer le serveur web pour l'interface
  const webServer = spawn('node', ['-e', `
    const http = require('http');
    const fs = require('fs');
    const path = require('path');
    
    const server = http.createServer((req, res) => {
      // G√©rer les requ√™tes vers le serveur de donn√©es
      if (req.url.startsWith('/api/')) {
        res.writeHead(302, { 'Location': 'http://localhost:3004' + req.url });
        res.end();
        return;
      }
      
      const filePath = path.join(__dirname, req.url === '/' ? '/index.html' : req.url);
      const extname = path.extname(filePath).toLowerCase();
      
      const contentTypes = {
        '.html': 'text/html; charset=utf-8',
        '.js': 'application/javascript; charset=utf-8',
        '.css': 'text/css; charset=utf-8',
        '.svg': 'image/svg+xml',
        '.png': 'image/png',
        '.jpg': 'image/jpeg',
        '.jpeg': 'image/jpeg',
        '.ico': 'image/x-icon',
        '.json': 'application/json; charset=utf-8'
      };
      
      const contentType = contentTypes[extname] || 'text/plain; charset=utf-8';
      
      fs.readFile(filePath, (err, content) => {
        if (err) {
          if (err.code === 'ENOENT') {
            res.writeHead(404, { 
              'Content-Type': 'text/html; charset=utf-8',
              'Access-Control-Allow-Origin': '*'
            });
            res.end('<h1>404 - Fichier non trouv√©</h1><p>Chemin: ' + filePath + '</p>');
          } else {
            res.writeHead(500, { 
              'Content-Type': 'text/plain; charset=utf-8',
              'Access-Control-Allow-Origin': '*'
            });
            res.end('Erreur serveur: ' + err.code);
          }
        } else {
          res.writeHead(200, { 
            'Content-Type': contentType,
            'Access-Control-Allow-Origin': '*',
            'Cache-Control': 'no-cache'
          });
          res.end(content);
        }
      });
    });
    
    const PORT = 3003;
    server.listen(PORT, () => {
      console.log('üéâ MAYO TV est pr√™t !');
      console.log('üåê Interface web: http://localhost:3003');
      console.log('üìä Serveur de donn√©es: http://localhost:3004');
      console.log('\\n‚ú® Avantages du mode local:');
      console.log('   ‚Ä¢ Chargement ultra-rapide des donn√©es');
      console.log('   ‚Ä¢ Acc√®s √† tous les pays et cha√Ænes');
      console.log('   ‚Ä¢ Pas de limitations artificielles');
      console.log('   ‚Ä¢ Fonctionnement hors-ligne');
      console.log('\\nüëã Appuyez sur Ctrl+C pour arr√™ter');
    });
  `], {
    cwd: path.join(__dirname),
    stdio: 'inherit'
  });

  // Gestion de l'arr√™t propre
  process.on('SIGINT', () => {
    console.log('\\nüëã Arr√™t en cours...');
    dataServer.kill();
    webServer.kill();
    process.exit(0);
  });

  // Gestion des erreurs
  dataServer.on('error', (err) => {
    console.error('‚ùå Erreur serveur de donn√©es:', err.message);
  });

  webServer.on('error', (err) => {
    console.error('‚ùå Erreur serveur web:', err.message);
  });

}, 2000);